version: '2.4'

services:
  traefik:
    isolation: default
    image: traefik:v1.7.28-alpine
    command:
      - "--ping"
      - "--api"
      - "--docker"
      - "--accesslog"
    ports:
      - "80:80"
      - "8079:8080"
    healthcheck:
      test: [ "CMD", "traefik", "healthcheck", "--ping" ]
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - headstart

  middleware:
    image: ${REGISTRY}headstart-middleware:${VERSION}-linux
    isolation: default
    ports:
      - 43005:80
    build:
      context: .
      dockerfile: docker/build/middleware/Dockerfile
      args:
        BUILD_IMAGE: mcr.microsoft.com/dotnet/sdk:6.0-alpine3.14
        BASE_IMAGE: mcr.microsoft.com/dotnet/aspnet:6.0-alpine3.14
        BUILD_CONFIGURATION: ${BUILD_CONFIGURATION}
    environment:
      ASPNETCORE_ENVIRONMENT: ${BUILD_CONFIGURATION}
      ApplicationInsightsSettings_ConnectionString: "${ApplicationInsightsSettings_ConnectionString}"

      AvalaraSettings_AccountID: "${AvalaraSettings_AccountID}"
      AvalaraSettings_CompanyCode: "${AvalaraSettings_CompanyCode}"
      AvalaraSettings_CompanyID: "${AvalaraSettings_CompanyID}"
      AvalaraSettings_LicenseKey: "${AvalaraSettings_LicenseKey}"
      AvalaraSettings_BaseApiUrl: "${AvalaraSettings_BaseApiUrl}"

      CardConnectSettings_Authorization: "${CardConnectSettings_Authorization}"
      CardConnectSettings_AuthorizationCad: "${CardConnectSettings_AuthorizationCad}"
      CardConnectSettings_BaseUrl: "${CardConnectSettings_BaseUrl}"
      CardConnectSettings_CadMerchantID: "${CardConnectSettings_CadMerchantID}"
      CardConnectSettings_Site: "${CardConnectSettings_Site}"
      CardConnectSettings_UsdMerchantID: "${CardConnectSettings_UsdMerchantID}"

      CosmosSettings_DatabaseName: "${CosmosSettings_DatabaseName}"
      CosmosSettings_EndpointUri: "${CosmosSettings_EndpointUri}"
      CosmosSettings_PrimaryKey: "${CosmosSettings_PrimaryKey}"
      CosmosSettings_RequestTimeoutInSeconds: "${CosmosSettings_RequestTimeoutInSeconds}"

      EasyPostSettings_ApiKey: "${EasyPostSettings_ApiKey}"
      EasyPostSettings_CustomsSigner: ${EasyPostSettings_CustomsSigner}
      EasyPostSettings_FedexAccountId: "${EasyPostSettings_FedexAccountId}"
      EasyPostSettings_FreeShippingTransitDays: "${EasyPostSettings_FreeShippingTransitDays}"
      EasyPostSettings_NoRatesFallbackCost: "${EasyPostSettings_NoRatesFallbackCost}"
      EasyPostSettings_NoRatesFallbackTransitDays: "${EasyPostSettings_NoRatesFallbackTransitDays}"
      EasyPostSettings_USPSAccountId: "${EasyPostSettings_USPSAccountId}"

      EnvironmentSettings_BuildNumber: "${EnvironmentSettings_BuildNumber}"
      EnvironmentSettings_Commit: "${EnvironmentSettings_Commit}"
      EnvironmentSettings_Environment: "${EnvironmentSettings_Environment}"
      EnvironmentSettings_MiddlewareBaseUrl: "${API_HOST}"
      EnvironmentSettings_AddressValidationProvider: "${EnvironmentSettings_AddressValidationProvider}"
      EnvironmentSettings_CMSProvider: "${EnvironmentSettings_CMSProvider}"
      EnvironmentSettings_CurrencyConversionProvider: "${EnvironmentSettings_CurrencyConversionProvider}"
      EnvironmentSettings_EmailServiceProvider: "${EnvironmentSettings_EmailServiceProvider}"
      EnvironmentSettings_OMSProvider: "${EnvironmentSettings_OMSProvider}"
      EnvironmentSettings_PaymentProvider: "${EnvironmentSettings_PaymentProvider}"
      EnvironmentSettings_ShippingProvider: "${EnvironmentSettings_ShippingProvider}"
      EnvironmentSettings_TaxProvider: "${EnvironmentSettings_TaxProvider}"

      FlurlSettings_TimeoutInSeconds: "${FlurlSettings_TimeoutInSeconds}"

      JobSettings_CaptureCreditCardsAfterDate: "${JobSettings_CaptureCreditCardsAfterDate}"
      JobSettings_ShouldCaptureCreditCardPayments: "${JobSettings_ShouldCaptureCreditCardPayments}"
      JobSettings_ShouldRunZoho: "${JobSettings_ShouldRunZoho}"

      OrderCloudSettings_ApiUrl: "${OrderCloudSettings_ApiUrl}"
      OrderCloudSettings_ClientIDsWithAPIAccess: "${OrderCloudSettings_ClientIDsWithAPIAccess}"
      OrderCloudSettings_IncrementorPrefix: "${OrderCloudSettings_IncrementorPrefix}"
      OrderCloudSettings_MarketplaceID: "${OrderCloudSettings_MarketplaceID}"
      OrderCloudSettings_MarketplaceName: "${OrderCloudSettings_MarketplaceName}"
      OrderCloudSettings_MiddlewareClientID: "${OrderCloudSettings_MiddlewareClientID}"
      OrderCloudSettings_MiddlewareClientSecret: "${OrderCloudSettings_MiddlewareClientSecret}"
      OrderCloudSettings_WebhookHashKey: "${OrderCloudSettings_WebhookHashKey}"

      SendGridSettings_ApiKey: "${SendGridSettings_ApiKey}"
      SendgridSettings_BillingEmail: "${SendgridSettings_BillingEmail}"
      SendgridSettings_CriticalSupportEmails: "${SendgridSettings_CriticalSupportEmails}"
      SendgridSettings_CriticalSupportTemplateID: "${SendgridSettings_CriticalSupportTemplateID}"
      SendgridSettings_FromEmail: "${SendgridSettings_FromEmail}"
      SendgridSettings_LineItemStatusChangeTemplateID: "${SendgridSettings_LineItemStatusChangeTemplateID}"
      SendgridSettings_NewUserTemplateID: "${SendgridSettings_NewUserTemplateID}"
      SendgridSettings_OrderApprovalTemplateID: "${SendgridSettings_OrderApprovalTemplateID}"
      SendgridSettings_OrderSubmitTemplateID: "${SendgridSettings_OrderSubmitTemplateID}"
      SendgridSettings_PasswordResetTemplateID: "${SendgridSettings_PasswordResetTemplateID}"
      SendgridSettings_ProductInformationRequestTemplateID: "${SendgridSettings_ProductInformationRequestTemplateID}"
      SendgridSettings_QuoteOrderSubmitTemplateID: "${SendgridSettings_QuoteOrderSubmitTemplateID}"
      SendgridSettings_SupportCaseEmail: "${SendgridSettings_SupportCaseEmail}"
      SendgridSettings_OrderReturnTemplateID: "${SendgridSettings_OrderReturnTemplateID}"

      ServiceBusSettings_ConnectionString: "${ServiceBusSettings_ConnectionString}"
      ServiceBusSettings_ZohoQueueName: "${ServiceBusSettings_ZohoQueueName}"

      SmartyStreetSettings_AuthID: "${SmartyStreetSettings_AuthID}"
      SmartyStreetSettings_AuthToken: "${SmartyStreetSettings_AuthToken}"

      StorageAccountSettings_ConnectionString: "${StorageAccountSettings_ConnectionString}"
      StorageAccountSettings_HostUrl: "${StorageAccountSettings_HostUrl}"
      StorageAccountSettings_Key: "${StorageAccountSettings_Key}"
      StorageAccountSettings_ContainerNameQueue: "${StorageAccountSettings_ContainerNameQueue}"
      StorageAccountSettings_ContainerNameCache: "${StorageAccountSettings_ContainerNameCache}"
      StorageAccountSettings_BlobContainerNameExchangeRates: "${StorageAccountSettings_ContainerNameExchangeRates}"
      StorageAccountSettings_ContainerNameTranslations: "${StorageAccountSettings_ContainerNameTranslations}"
      StorageAccountSettings_BlobPrimaryEndpoint: "${StorageAccountSettings_BlobPrimaryEndpoint}"

      UI_BaseAdminUrl: "http://${SELLER_HOST}"

      ZohoSettings_AccessToken: "${ZohoSettings_AccessToken}"
      ZohoSettings_ApiUrl: "${ZohoSettings_ApiUrl}"
      ZohoSettings_ClientId: "${ZohoSettings_ClientId}"
      ZohoSettings_ClientSecret: "${ZohoSettings_ClientSecret}"
      ZohoSettings_OrganizationID: "${ZohoSettings_OrganizationID}"
      ZohoSettings_PerformOrderSubmitTasks: "${ZohoSettings_PerformOrderSubmitTasks}"
    depends_on:
      cosmos:
        condition: service_healthy
    networks:
      headstart:
        aliases:
          - "${API_HOST}"
    labels:
      - "traefik.enable=true"
      - "traefik.middleware.frontend.rule=Host:${API_HOST}"

  seller:
    image: ${REGISTRY}headstart-seller:${VERSION}-linux
    isolation: default
    environment:
      MARKETPLACE_ID: ${OrderCloudSettings_MarketplaceID}
      SELLER_CLIENT_ID: ${SELLER_CLIENT_ID}
      MIDDLEWARE_URL: http://${API_HOST}
      TRANSLATE_BLOB_URL: ${TRANSLATE_BLOB_URL}
      BLOB_STORAGE_URL: ${BLOB_STORAGE_URL}
      BUYER_CLIENT_ID: ${BUYER_CLIENT_ID}
      SUPPORTED_LANGUAGES: ${SELLER_SUPPORTED_LANGUAGES}
      DEFAULT_LANGUAGE: ${SELLER_DEFAULT_LANGUAGE}
    ports:
      - 43010:80
    build:
      context: .
      dockerfile: docker/build/UI/Dockerfile
      args:
        BASE_IMAGE: node:12.20.0-alpine
        ROLE: Seller
    labels:
      - "traefik.enable=true"
      - "traefik.seller.frontend.rule=Host:${SELLER_HOST}"
    networks:
      headstart:
        aliases:
          - "${SELLER_HOST}"

  buyer:
    image: ${REGISTRY}headstart-buyer:${VERSION}-linux
    isolation: default
    environment:
      BUYER_CLIENT_ID: ${BUYER_CLIENT_ID}
      MIDDLEWARE_URL: http://${API_HOST}
      BUYER_URL: http://${BUYER_HOST}
      MARKETPLACE_ID: ${OrderCloudSettings_MarketplaceID}
      MARKETPLACE_NAME: ${OrderCloudSettings_MarketplaceName}
      TRANSLATE_BLOB_URL: ${TRANSLATE_BLOB_URL}
      SUPPORTED_LANGUAGES: ${BUYER_SUPPORTED_LANGUAGES}
      DEFAULT_LANGUAGE: ${BUYER_DEFAULT_LANGUAGE}

    ports:
      - 43015:80
    build:
      context: .
      dockerfile: docker/build/UI/Dockerfile
      args:
        BASE_IMAGE: node:12.20.0-alpine
        ROLE: Buyer
    labels:
      - "traefik.enable=true"
      - "traefik.buyer.frontend.rule=Host:${BUYER_HOST}"
    networks:
      headstart:
        aliases:
          - "${BUYER_HOST}"

  storage:
    image: mcr.microsoft.com/azure-storage/azurite:${AZUREITE_TAG}
    volumes:
      - ./docker/data/storage:/data
    environment:
      blobHost: 0.0.0.0
      queueHost: 0.0.0.0
      blobPort: 10000
    ports:
      - 10000:10000
      - 10001:10001
    networks:
      headstart:


  cosmos:
    image: ${REGISTRY}headstart-cosmos:${VERSION}-linux
    mem_limit: 3g
    cpu_count: 2
    build:
      context: .
      dockerfile: docker/build/cosmos/Dockerfile
      args:
        BASE_IMAGE: mcr.microsoft.com/cosmosdb/linux/azure-cosmos-emulator:${COSMOS_TAG}
    environment:
      AZURE_COSMOS_EMULATOR_PARTITION_COUNT: 10
      AZURE_COSMOS_EMULATOR_ENABLE_DATA_PERSISTENCE: "true"
    ports:
      - 8081:8081
      - 10251:10251
      - 10252:10252
      - 10253:10253
      - 10254:10254
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -f -k https://localhost:8081/_explorer/emulator.pem || exit 1"
        ]
    networks:
      headstart:


networks:
  headstart:
